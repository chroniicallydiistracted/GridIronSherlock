# coding: utf-8

"""
    GridIron Sherlock API

    Contracts for the GridIron Sherlock fantasy intelligence platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_profile import UserProfile

class TestUserProfile(unittest.TestCase):
    """UserProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserProfile:
        """Test UserProfile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserProfile`
        """
        model = UserProfile()
        if include_optional:
            return UserProfile(
                user_id = '',
                email = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                display_name = '',
                accounts = [
                    openapi_client.models.linked_account.LinkedAccount(
                        provider = 'espn', 
                        status = 'linked', 
                        scopes = [
                            ''
                            ], 
                        linked_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_sync_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        needs_reauth = True, 
                        error_code = '', 
                        error_message = '', )
                    ],
                active_league_ids = [
                    ''
                    ],
                preferences = openapi_client.models.user_profile_preferences.UserProfile_preferences(
                    default_league_id = '', 
                    default_view = '', 
                    notification_opt_in = True, ),
                feature_flags = [
                    ''
                    ]
            )
        else:
            return UserProfile(
                user_id = '',
                email = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                accounts = [
                    openapi_client.models.linked_account.LinkedAccount(
                        provider = 'espn', 
                        status = 'linked', 
                        scopes = [
                            ''
                            ], 
                        linked_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_sync_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        needs_reauth = True, 
                        error_code = '', 
                        error_message = '', )
                    ],
                active_league_ids = [
                    ''
                    ],
        )
        """

    def testUserProfile(self):
        """Test UserProfile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
