# coding: utf-8

"""
    GridIron Sherlock API

    Contracts for the GridIron Sherlock fantasy intelligence platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gridiron_sherlock_sdk.models.live_impact_event import LiveImpactEvent

class TestLiveImpactEvent(unittest.TestCase):
    """LiveImpactEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LiveImpactEvent:
        """Test LiveImpactEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LiveImpactEvent`
        """
        model = LiveImpactEvent()
        if include_optional:
            return LiveImpactEvent(
                event_id = '',
                game_id = '',
                play_id = 56,
                occurred_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                headline = '',
                description = '',
                impact_type = 'touchdown',
                affected_players = [
                    gridiron_sherlock_sdk.models.live_impact_event_affected_players_inner.LiveImpactEvent_affectedPlayers_inner(
                        player_id = '', 
                        team = '', 
                        impact = '', 
                        points_delta = 1.337, )
                    ],
                fantasy_implications = [
                    ''
                    ],
                provenance = gridiron_sherlock_sdk.models.provenance.Provenance(
                    source = '', 
                    as_of = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    model_version = '', 
                    notes = [
                        ''
                        ], ),
                links = [
                    ''
                    ]
            )
        else:
            return LiveImpactEvent(
                event_id = '',
                game_id = '',
                play_id = 56,
                occurred_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                headline = '',
                impact_type = 'touchdown',
                fantasy_implications = [
                    ''
                    ],
        )
        """

    def testLiveImpactEvent(self):
        """Test LiveImpactEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
