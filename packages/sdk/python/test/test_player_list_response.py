# coding: utf-8

"""
    GridIron Sherlock API

    Contracts for the GridIron Sherlock fantasy intelligence platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gridiron_sherlock_sdk.models.player_list_response import PlayerListResponse

class TestPlayerListResponse(unittest.TestCase):
    """PlayerListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlayerListResponse:
        """Test PlayerListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlayerListResponse`
        """
        model = PlayerListResponse()
        if include_optional:
            return PlayerListResponse(
                total = 0,
                page = 1,
                page_size = 1,
                items = [
                    gridiron_sherlock_sdk.models.player_summary.PlayerSummary(
                        player_id = '', 
                        gsis_id = '', 
                        full_name = '', 
                        position = '', 
                        team = '', 
                        bye_week = 1, 
                        age = 18, 
                        injury = gridiron_sherlock_sdk.models.injury_status.InjuryStatus(
                            status = 'active', 
                            designation = '', 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            notes = '', ), 
                        provenance = gridiron_sherlock_sdk.models.provenance.Provenance(
                            source = '', 
                            as_of = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            model_version = '', 
                            notes = [
                                ''
                                ], ), )
                    ]
            )
        else:
            return PlayerListResponse(
                total = 0,
                page = 1,
                page_size = 1,
                items = [
                    gridiron_sherlock_sdk.models.player_summary.PlayerSummary(
                        player_id = '', 
                        gsis_id = '', 
                        full_name = '', 
                        position = '', 
                        team = '', 
                        bye_week = 1, 
                        age = 18, 
                        injury = gridiron_sherlock_sdk.models.injury_status.InjuryStatus(
                            status = 'active', 
                            designation = '', 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            notes = '', ), 
                        provenance = gridiron_sherlock_sdk.models.provenance.Provenance(
                            source = '', 
                            as_of = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            model_version = '', 
                            notes = [
                                ''
                                ], ), )
                    ],
        )
        """

    def testPlayerListResponse(self):
        """Test PlayerListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
