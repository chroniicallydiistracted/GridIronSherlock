# coding: utf-8

"""
    GridIron Sherlock API

    Contracts for the GridIron Sherlock fantasy intelligence platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.league_list_response import LeagueListResponse

class TestLeagueListResponse(unittest.TestCase):
    """LeagueListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LeagueListResponse:
        """Test LeagueListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LeagueListResponse`
        """
        model = LeagueListResponse()
        if include_optional:
            return LeagueListResponse(
                total = 0,
                page = 1,
                page_size = 1,
                items = [
                    openapi_client.models.league_summary.LeagueSummary(
                        league_id = '', 
                        provider = 'espn', 
                        name = '', 
                        season = 56, 
                        format = '', 
                        avatar_url = '', 
                        last_sync_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        teams = 56, 
                        status = 'preseason', )
                    ]
            )
        else:
            return LeagueListResponse(
                total = 0,
                page = 1,
                page_size = 1,
                items = [
                    openapi_client.models.league_summary.LeagueSummary(
                        league_id = '', 
                        provider = 'espn', 
                        name = '', 
                        season = 56, 
                        format = '', 
                        avatar_url = '', 
                        last_sync_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        teams = 56, 
                        status = 'preseason', )
                    ],
        )
        """

    def testLeagueListResponse(self):
        """Test LeagueListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
