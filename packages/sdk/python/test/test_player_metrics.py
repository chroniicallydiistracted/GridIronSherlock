# coding: utf-8

"""
    GridIron Sherlock API

    Contracts for the GridIron Sherlock fantasy intelligence platform.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from gridiron_sherlock_sdk.models.player_metrics import PlayerMetrics

class TestPlayerMetrics(unittest.TestCase):
    """PlayerMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlayerMetrics:
        """Test PlayerMetrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlayerMetrics`
        """
        model = PlayerMetrics()
        if include_optional:
            return PlayerMetrics(
                season = 56,
                week = 56,
                usage = gridiron_sherlock_sdk.models.player_metrics_usage.PlayerMetrics_usage(
                    snap_share = 1.337, 
                    route_share = 1.337, 
                    target_share = 1.337, 
                    rush_share = 1.337, 
                    red_zone_touch_share = 1.337, ),
                efficiency = gridiron_sherlock_sdk.models.player_metrics_efficiency.PlayerMetrics_efficiency(
                    yprr = 1.337, 
                    adot = 1.337, 
                    epa_per_target = 1.337, 
                    epa_per_rush = 1.337, 
                    success_rate = 1.337, ),
                context = gridiron_sherlock_sdk.models.player_metrics_context.PlayerMetrics_context(
                    pace_rank = 56, 
                    proe = 1.337, 
                    matchup_difficulty = '', ),
                provenance = gridiron_sherlock_sdk.models.provenance.Provenance(
                    source = '', 
                    as_of = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    model_version = '', 
                    notes = [
                        ''
                        ], )
            )
        else:
            return PlayerMetrics(
                season = 56,
                week = 56,
        )
        """

    def testPlayerMetrics(self):
        """Test PlayerMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
