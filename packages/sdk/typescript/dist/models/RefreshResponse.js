/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ProvenanceFromJSON, ProvenanceToJSON, } from './Provenance.js';
import { ScopeIdFromJSON, ScopeIdToJSON, } from './ScopeId.js';
/**
 * @export
 */
export const RefreshResponseStatusEnum = {
    Queued: 'queued',
    InProgress: 'in-progress',
    Skipped: 'skipped'
};
/**
 * Check if a given object implements the RefreshResponse interface.
 */
export function instanceOfRefreshResponse(value) {
    if (!('scope' in value) || value['scope'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('enqueuedAt' in value) || value['enqueuedAt'] === undefined)
        return false;
    return true;
}
export function RefreshResponseFromJSON(json) {
    return RefreshResponseFromJSONTyped(json, false);
}
export function RefreshResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        ...json,
        'scope': ScopeIdFromJSON(json['scope']),
        'status': json['status'],
        'enqueuedAt': (new Date(json['enqueuedAt'])),
        'estimatedCompletion': json['estimatedCompletion'] == null ? undefined : (new Date(json['estimatedCompletion'])),
        'context': json['context'] == null ? undefined : json['context'],
        'provenance': json['provenance'] == null ? undefined : ProvenanceFromJSON(json['provenance']),
    };
}
export function RefreshResponseToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        ...value,
        'scope': ScopeIdToJSON(value['scope']),
        'status': value['status'],
        'enqueuedAt': ((value['enqueuedAt']).toISOString()),
        'estimatedCompletion': value['estimatedCompletion'] == null ? undefined : ((value['estimatedCompletion']).toISOString()),
        'context': value['context'],
        'provenance': ProvenanceToJSON(value['provenance']),
    };
}
