/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { WaiverRecommendationReplacementComparisonFromJSON, WaiverRecommendationReplacementComparisonToJSON, } from './WaiverRecommendationReplacementComparison.js';
import { PlayerSummaryFromJSON, PlayerSummaryToJSON, } from './PlayerSummary.js';
import { ProvenanceFromJSON, ProvenanceToJSON, } from './Provenance.js';
import { FAABRangeFromJSON, FAABRangeToJSON, } from './FAABRange.js';
/**
 * @export
 */
export const WaiverRecommendationRecommendedActionEnum = {
    Add: 'add',
    Monitor: 'monitor',
    Avoid: 'avoid'
};
/**
 * Check if a given object implements the WaiverRecommendation interface.
 */
export function instanceOfWaiverRecommendation(value) {
    if (!('player' in value) || value['player'] === undefined)
        return false;
    if (!('projectedPoints' in value) || value['projectedPoints'] === undefined)
        return false;
    if (!('faab' in value) || value['faab'] === undefined)
        return false;
    if (!('priority' in value) || value['priority'] === undefined)
        return false;
    if (!('recommendedAction' in value) || value['recommendedAction'] === undefined)
        return false;
    return true;
}
export function WaiverRecommendationFromJSON(json) {
    return WaiverRecommendationFromJSONTyped(json, false);
}
export function WaiverRecommendationFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        ...json,
        'player': PlayerSummaryFromJSON(json['player']),
        'projectedPoints': json['projectedPoints'],
        'faab': FAABRangeFromJSON(json['faab']),
        'priority': json['priority'],
        'recommendedAction': json['recommendedAction'],
        'reason': json['reason'] == null ? undefined : json['reason'],
        'replacementComparison': json['replacementComparison'] == null ? undefined : WaiverRecommendationReplacementComparisonFromJSON(json['replacementComparison']),
        'provenance': json['provenance'] == null ? undefined : ProvenanceFromJSON(json['provenance']),
    };
}
export function WaiverRecommendationToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        ...value,
        'player': PlayerSummaryToJSON(value['player']),
        'projectedPoints': value['projectedPoints'],
        'faab': FAABRangeToJSON(value['faab']),
        'priority': value['priority'],
        'recommendedAction': value['recommendedAction'],
        'reason': value['reason'],
        'replacementComparison': WaiverRecommendationReplacementComparisonToJSON(value['replacementComparison']),
        'provenance': ProvenanceToJSON(value['provenance']),
    };
}
