/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { PlayerSummaryFromJSON, PlayerSummaryToJSON, } from './PlayerSummary.js';
import { RecentGameFromJSON, RecentGameToJSON, } from './RecentGame.js';
import { PlayerDetailProjectionsFromJSON, PlayerDetailProjectionsToJSON, } from './PlayerDetailProjections.js';
import { PlayerMetricsFromJSON, PlayerMetricsToJSON, } from './PlayerMetrics.js';
/**
 * Check if a given object implements the PlayerDetail interface.
 */
export function instanceOfPlayerDetail(value) {
    if (!('player' in value) || value['player'] === undefined)
        return false;
    if (!('metrics' in value) || value['metrics'] === undefined)
        return false;
    if (!('projections' in value) || value['projections'] === undefined)
        return false;
    return true;
}
export function PlayerDetailFromJSON(json) {
    return PlayerDetailFromJSONTyped(json, false);
}
export function PlayerDetailFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        ...json,
        'player': PlayerSummaryFromJSON(json['player']),
        'metrics': PlayerMetricsFromJSON(json['metrics']),
        'projections': PlayerDetailProjectionsFromJSON(json['projections']),
        'recentGames': json['recentGames'] == null ? undefined : (json['recentGames'].map(RecentGameFromJSON)),
        'insights': json['insights'] == null ? undefined : json['insights'],
    };
}
export function PlayerDetailToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        ...value,
        'player': PlayerSummaryToJSON(value['player']),
        'metrics': PlayerMetricsToJSON(value['metrics']),
        'projections': PlayerDetailProjectionsToJSON(value['projections']),
        'recentGames': value['recentGames'] == null ? undefined : (value['recentGames'].map(RecentGameToJSON)),
        'insights': value['insights'],
    };
}
