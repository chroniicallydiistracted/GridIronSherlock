/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { OptimizationAlternativeChangesInnerFromJSON, OptimizationAlternativeChangesInnerToJSON, } from './OptimizationAlternativeChangesInner.js';
import { OptimizationSlotFromJSON, OptimizationSlotToJSON, } from './OptimizationSlot.js';
/**
 * Check if a given object implements the OptimizationAlternative interface.
 */
export function instanceOfOptimizationAlternative(value) {
    if (!('rank' in value) || value['rank'] === undefined)
        return false;
    if (!('projectedPoints' in value) || value['projectedPoints'] === undefined)
        return false;
    if (!('lineup' in value) || value['lineup'] === undefined)
        return false;
    return true;
}
export function OptimizationAlternativeFromJSON(json) {
    return OptimizationAlternativeFromJSONTyped(json, false);
}
export function OptimizationAlternativeFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        ...json,
        'rank': json['rank'],
        'projectedPoints': json['projectedPoints'],
        'deltaFromBest': json['deltaFromBest'] == null ? undefined : json['deltaFromBest'],
        'lineup': (json['lineup'].map(OptimizationSlotFromJSON)),
        'changes': json['changes'] == null ? undefined : (json['changes'].map(OptimizationAlternativeChangesInnerFromJSON)),
    };
}
export function OptimizationAlternativeToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        ...value,
        'rank': value['rank'],
        'projectedPoints': value['projectedPoints'],
        'deltaFromBest': value['deltaFromBest'],
        'lineup': (value['lineup'].map(OptimizationSlotToJSON)),
        'changes': value['changes'] == null ? undefined : (value['changes'].map(OptimizationAlternativeChangesInnerToJSON)),
    };
}
