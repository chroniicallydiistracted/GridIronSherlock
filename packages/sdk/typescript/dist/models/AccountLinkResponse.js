/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ProviderIdFromJSON, ProviderIdToJSON, } from './ProviderId.js';
import { AccountLinkResponsePkceFromJSON, AccountLinkResponsePkceToJSON, } from './AccountLinkResponsePkce.js';
/**
 * Check if a given object implements the AccountLinkResponse interface.
 */
export function instanceOfAccountLinkResponse(value) {
    if (!('provider' in value) || value['provider'] === undefined)
        return false;
    if (!('authorizationUrl' in value) || value['authorizationUrl'] === undefined)
        return false;
    if (!('state' in value) || value['state'] === undefined)
        return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined)
        return false;
    return true;
}
export function AccountLinkResponseFromJSON(json) {
    return AccountLinkResponseFromJSONTyped(json, false);
}
export function AccountLinkResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        ...json,
        'provider': ProviderIdFromJSON(json['provider']),
        'authorizationUrl': json['authorizationUrl'],
        'state': json['state'],
        'expiresAt': (new Date(json['expiresAt'])),
        'pkce': json['pkce'] == null ? undefined : AccountLinkResponsePkceFromJSON(json['pkce']),
    };
}
export function AccountLinkResponseToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        ...value,
        'provider': ProviderIdToJSON(value['provider']),
        'authorizationUrl': value['authorizationUrl'],
        'state': value['state'],
        'expiresAt': ((value['expiresAt']).toISOString()),
        'pkce': AccountLinkResponsePkceToJSON(value['pkce']),
    };
}
