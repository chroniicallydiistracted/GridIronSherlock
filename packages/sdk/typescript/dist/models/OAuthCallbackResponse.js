/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { ProviderIdFromJSON, ProviderIdToJSON, } from './ProviderId.js';
import { LinkedAccountFromJSON, LinkedAccountToJSON, } from './LinkedAccount.js';
/**
 * @export
 */
export const OAuthCallbackResponseStatusEnum = {
    Linked: 'linked',
    Pending: 'pending',
    Error: 'error'
};
/**
 * Check if a given object implements the OAuthCallbackResponse interface.
 */
export function instanceOfOAuthCallbackResponse(value) {
    if (!('provider' in value) || value['provider'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    return true;
}
export function OAuthCallbackResponseFromJSON(json) {
    return OAuthCallbackResponseFromJSONTyped(json, false);
}
export function OAuthCallbackResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'provider': ProviderIdFromJSON(json['provider']),
        'status': json['status'],
        'linkedAccount': json['linkedAccount'] == null ? undefined : LinkedAccountFromJSON(json['linkedAccount']),
        'redirect': json['redirect'] == null ? undefined : json['redirect'],
        'message': json['message'] == null ? undefined : json['message'],
    };
}
export function OAuthCallbackResponseToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'provider': ProviderIdToJSON(value['provider']),
        'status': value['status'],
        'linkedAccount': LinkedAccountToJSON(value['linkedAccount']),
        'redirect': value['redirect'],
        'message': value['message'],
    };
}
