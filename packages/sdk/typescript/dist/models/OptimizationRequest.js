/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { OptimizationConstraintsFromJSON, OptimizationConstraintsToJSON, } from './OptimizationConstraints.js';
import { OptimizationObjectiveFromJSON, OptimizationObjectiveToJSON, } from './OptimizationObjective.js';
import { ScoringPeriodFromJSON, ScoringPeriodToJSON, } from './ScoringPeriod.js';
import { OptimizationRequestContextFromJSON, OptimizationRequestContextToJSON, } from './OptimizationRequestContext.js';
/**
 * Check if a given object implements the OptimizationRequest interface.
 */
export function instanceOfOptimizationRequest(value) {
    if (!('period' in value) || value['period'] === undefined)
        return false;
    if (!('objective' in value) || value['objective'] === undefined)
        return false;
    return true;
}
export function OptimizationRequestFromJSON(json) {
    return OptimizationRequestFromJSONTyped(json, false);
}
export function OptimizationRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        ...json,
        'period': ScoringPeriodFromJSON(json['period']),
        'objective': OptimizationObjectiveFromJSON(json['objective']),
        'constraints': json['constraints'] == null ? undefined : OptimizationConstraintsFromJSON(json['constraints']),
        'context': json['context'] == null ? undefined : OptimizationRequestContextFromJSON(json['context']),
    };
}
export function OptimizationRequestToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        ...value,
        'period': ScoringPeriodToJSON(value['period']),
        'objective': OptimizationObjectiveToJSON(value['objective']),
        'constraints': OptimizationConstraintsToJSON(value['constraints']),
        'context': OptimizationRequestContextToJSON(value['context']),
    };
}
