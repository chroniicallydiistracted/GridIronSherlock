/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime.js';
import { WaiverListResponseFromJSON, } from '../models/index.js';
/**
 *
 */
export class WaiversApi extends runtime.BaseAPI {
    /**
     * List waiver recommendations
     */
    async listWaiversRaw(requestParameters, initOverrides) {
        if (requestParameters['leagueId'] == null) {
            throw new runtime.RequiredError('leagueId', 'Required parameter "leagueId" was null or undefined when calling listWaivers().');
        }
        const queryParameters = {};
        if (requestParameters['leagueId'] != null) {
            queryParameters['leagueId'] = requestParameters['leagueId'];
        }
        if (requestParameters['week'] != null) {
            queryParameters['week'] = requestParameters['week'];
        }
        if (requestParameters['season'] != null) {
            queryParameters['season'] = requestParameters['season'];
        }
        const headerParameters = {};
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("serviceToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/waivers`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => WaiverListResponseFromJSON(jsonValue));
    }
    /**
     * List waiver recommendations
     */
    async listWaivers(requestParameters, initOverrides) {
        const response = await this.listWaiversRaw(requestParameters, initOverrides);
        return await response.value();
    }
}
