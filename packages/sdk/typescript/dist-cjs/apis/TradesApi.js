"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.TradesApi = void 0;
const runtime = __importStar(require("../runtime"));
const index_1 = require("../models/index");
/**
 *
 */
class TradesApi extends runtime.BaseAPI {
    /**
     * Estimate trade fairness and impact
     */
    async estimateTradeRaw(requestParameters, initOverrides) {
        if (requestParameters['tradeEstimateRequest'] == null) {
            throw new runtime.RequiredError('tradeEstimateRequest', 'Required parameter "tradeEstimateRequest" was null or undefined when calling estimateTrade().');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("serviceToken", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/trades/estimate`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: (0, index_1.TradeEstimateRequestToJSON)(requestParameters['tradeEstimateRequest']),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.TradeEstimateResponseFromJSON)(jsonValue));
    }
    /**
     * Estimate trade fairness and impact
     */
    async estimateTrade(requestParameters, initOverrides) {
        const response = await this.estimateTradeRaw(requestParameters, initOverrides);
        return await response.value();
    }
}
exports.TradesApi = TradesApi;
