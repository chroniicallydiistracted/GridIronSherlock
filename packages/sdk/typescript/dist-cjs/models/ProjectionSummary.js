"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfProjectionSummary = instanceOfProjectionSummary;
exports.ProjectionSummaryFromJSON = ProjectionSummaryFromJSON;
exports.ProjectionSummaryFromJSONTyped = ProjectionSummaryFromJSONTyped;
exports.ProjectionSummaryToJSON = ProjectionSummaryToJSON;
const Provenance_1 = require("./Provenance");
/**
 * Check if a given object implements the ProjectionSummary interface.
 */
function instanceOfProjectionSummary(value) {
    if (!('meanPoints' in value) || value['meanPoints'] === undefined)
        return false;
    if (!('p20' in value) || value['p20'] === undefined)
        return false;
    if (!('p50' in value) || value['p50'] === undefined)
        return false;
    if (!('p80' in value) || value['p80'] === undefined)
        return false;
    if (!('boomProbability' in value) || value['boomProbability'] === undefined)
        return false;
    if (!('bustProbability' in value) || value['bustProbability'] === undefined)
        return false;
    return true;
}
function ProjectionSummaryFromJSON(json) {
    return ProjectionSummaryFromJSONTyped(json, false);
}
function ProjectionSummaryFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'meanPoints': json['meanPoints'],
        'p20': json['p20'],
        'p50': json['p50'],
        'p80': json['p80'],
        'boomProbability': json['boomProbability'],
        'bustProbability': json['bustProbability'],
        'floorPoints': json['floorPoints'] == null ? undefined : json['floorPoints'],
        'ceilingPoints': json['ceilingPoints'] == null ? undefined : json['ceilingPoints'],
        'provenance': json['provenance'] == null ? undefined : (0, Provenance_1.ProvenanceFromJSON)(json['provenance']),
    };
}
function ProjectionSummaryToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'meanPoints': value['meanPoints'],
        'p20': value['p20'],
        'p50': value['p50'],
        'p80': value['p80'],
        'boomProbability': value['boomProbability'],
        'bustProbability': value['bustProbability'],
        'floorPoints': value['floorPoints'],
        'ceilingPoints': value['ceilingPoints'],
        'provenance': (0, Provenance_1.ProvenanceToJSON)(value['provenance']),
    };
}
