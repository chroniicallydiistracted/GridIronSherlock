"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfLeagueDetail = instanceOfLeagueDetail;
exports.LeagueDetailFromJSON = LeagueDetailFromJSON;
exports.LeagueDetailFromJSONTyped = LeagueDetailFromJSONTyped;
exports.LeagueDetailToJSON = LeagueDetailToJSON;
const TeamReference_1 = require("./TeamReference");
const Provenance_1 = require("./Provenance");
const LeagueDetailScoring_1 = require("./LeagueDetailScoring");
const LeagueSummary_1 = require("./LeagueSummary");
const TeamStanding_1 = require("./TeamStanding");
const LeagueDetailRosterSettings_1 = require("./LeagueDetailRosterSettings");
/**
 * Check if a given object implements the LeagueDetail interface.
 */
function instanceOfLeagueDetail(value) {
    if (!('league' in value) || value['league'] === undefined)
        return false;
    if (!('teams' in value) || value['teams'] === undefined)
        return false;
    if (!('scoring' in value) || value['scoring'] === undefined)
        return false;
    return true;
}
function LeagueDetailFromJSON(json) {
    return LeagueDetailFromJSONTyped(json, false);
}
function LeagueDetailFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        ...json,
        'league': (0, LeagueSummary_1.LeagueSummaryFromJSON)(json['league']),
        'teams': (json['teams'].map(TeamReference_1.TeamReferenceFromJSON)),
        'standings': json['standings'] == null ? undefined : (json['standings'].map(TeamStanding_1.TeamStandingFromJSON)),
        'scoring': (0, LeagueDetailScoring_1.LeagueDetailScoringFromJSON)(json['scoring']),
        'rosterSettings': json['rosterSettings'] == null ? undefined : (0, LeagueDetailRosterSettings_1.LeagueDetailRosterSettingsFromJSON)(json['rosterSettings']),
        'provenance': json['provenance'] == null ? undefined : (0, Provenance_1.ProvenanceFromJSON)(json['provenance']),
    };
}
function LeagueDetailToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        ...value,
        'league': (0, LeagueSummary_1.LeagueSummaryToJSON)(value['league']),
        'teams': (value['teams'].map(TeamReference_1.TeamReferenceToJSON)),
        'standings': value['standings'] == null ? undefined : (value['standings'].map(TeamStanding_1.TeamStandingToJSON)),
        'scoring': (0, LeagueDetailScoring_1.LeagueDetailScoringToJSON)(value['scoring']),
        'rosterSettings': (0, LeagueDetailRosterSettings_1.LeagueDetailRosterSettingsToJSON)(value['rosterSettings']),
        'provenance': (0, Provenance_1.ProvenanceToJSON)(value['provenance']),
    };
}
