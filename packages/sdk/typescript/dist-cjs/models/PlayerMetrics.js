"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPlayerMetrics = instanceOfPlayerMetrics;
exports.PlayerMetricsFromJSON = PlayerMetricsFromJSON;
exports.PlayerMetricsFromJSONTyped = PlayerMetricsFromJSONTyped;
exports.PlayerMetricsToJSON = PlayerMetricsToJSON;
const PlayerMetricsEfficiency_1 = require("./PlayerMetricsEfficiency");
const Provenance_1 = require("./Provenance");
const PlayerMetricsContext_1 = require("./PlayerMetricsContext");
const PlayerMetricsUsage_1 = require("./PlayerMetricsUsage");
/**
 * Check if a given object implements the PlayerMetrics interface.
 */
function instanceOfPlayerMetrics(value) {
    if (!('season' in value) || value['season'] === undefined)
        return false;
    if (!('week' in value) || value['week'] === undefined)
        return false;
    return true;
}
function PlayerMetricsFromJSON(json) {
    return PlayerMetricsFromJSONTyped(json, false);
}
function PlayerMetricsFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        ...json,
        'season': json['season'],
        'week': json['week'],
        'usage': json['usage'] == null ? undefined : (0, PlayerMetricsUsage_1.PlayerMetricsUsageFromJSON)(json['usage']),
        'efficiency': json['efficiency'] == null ? undefined : (0, PlayerMetricsEfficiency_1.PlayerMetricsEfficiencyFromJSON)(json['efficiency']),
        'context': json['context'] == null ? undefined : (0, PlayerMetricsContext_1.PlayerMetricsContextFromJSON)(json['context']),
        'provenance': json['provenance'] == null ? undefined : (0, Provenance_1.ProvenanceFromJSON)(json['provenance']),
    };
}
function PlayerMetricsToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        ...value,
        'season': value['season'],
        'week': value['week'],
        'usage': (0, PlayerMetricsUsage_1.PlayerMetricsUsageToJSON)(value['usage']),
        'efficiency': (0, PlayerMetricsEfficiency_1.PlayerMetricsEfficiencyToJSON)(value['efficiency']),
        'context': (0, PlayerMetricsContext_1.PlayerMetricsContextToJSON)(value['context']),
        'provenance': (0, Provenance_1.ProvenanceToJSON)(value['provenance']),
    };
}
