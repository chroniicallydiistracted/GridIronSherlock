"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.WaiverRecommendationRecommendedActionEnum = void 0;
exports.instanceOfWaiverRecommendation = instanceOfWaiverRecommendation;
exports.WaiverRecommendationFromJSON = WaiverRecommendationFromJSON;
exports.WaiverRecommendationFromJSONTyped = WaiverRecommendationFromJSONTyped;
exports.WaiverRecommendationToJSON = WaiverRecommendationToJSON;
const WaiverRecommendationReplacementComparison_1 = require("./WaiverRecommendationReplacementComparison");
const PlayerSummary_1 = require("./PlayerSummary");
const Provenance_1 = require("./Provenance");
const FAABRange_1 = require("./FAABRange");
/**
 * @export
 */
exports.WaiverRecommendationRecommendedActionEnum = {
    Add: 'add',
    Monitor: 'monitor',
    Avoid: 'avoid'
};
/**
 * Check if a given object implements the WaiverRecommendation interface.
 */
function instanceOfWaiverRecommendation(value) {
    if (!('player' in value) || value['player'] === undefined)
        return false;
    if (!('projectedPoints' in value) || value['projectedPoints'] === undefined)
        return false;
    if (!('faab' in value) || value['faab'] === undefined)
        return false;
    if (!('priority' in value) || value['priority'] === undefined)
        return false;
    if (!('recommendedAction' in value) || value['recommendedAction'] === undefined)
        return false;
    return true;
}
function WaiverRecommendationFromJSON(json) {
    return WaiverRecommendationFromJSONTyped(json, false);
}
function WaiverRecommendationFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        ...json,
        'player': (0, PlayerSummary_1.PlayerSummaryFromJSON)(json['player']),
        'projectedPoints': json['projectedPoints'],
        'faab': (0, FAABRange_1.FAABRangeFromJSON)(json['faab']),
        'priority': json['priority'],
        'recommendedAction': json['recommendedAction'],
        'reason': json['reason'] == null ? undefined : json['reason'],
        'replacementComparison': json['replacementComparison'] == null ? undefined : (0, WaiverRecommendationReplacementComparison_1.WaiverRecommendationReplacementComparisonFromJSON)(json['replacementComparison']),
        'provenance': json['provenance'] == null ? undefined : (0, Provenance_1.ProvenanceFromJSON)(json['provenance']),
    };
}
function WaiverRecommendationToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        ...value,
        'player': (0, PlayerSummary_1.PlayerSummaryToJSON)(value['player']),
        'projectedPoints': value['projectedPoints'],
        'faab': (0, FAABRange_1.FAABRangeToJSON)(value['faab']),
        'priority': value['priority'],
        'recommendedAction': value['recommendedAction'],
        'reason': value['reason'],
        'replacementComparison': (0, WaiverRecommendationReplacementComparison_1.WaiverRecommendationReplacementComparisonToJSON)(value['replacementComparison']),
        'provenance': (0, Provenance_1.ProvenanceToJSON)(value['provenance']),
    };
}
