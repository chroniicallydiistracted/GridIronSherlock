"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LineupSlotStatusEnum = void 0;
exports.instanceOfLineupSlot = instanceOfLineupSlot;
exports.LineupSlotFromJSON = LineupSlotFromJSON;
exports.LineupSlotFromJSONTyped = LineupSlotFromJSONTyped;
exports.LineupSlotToJSON = LineupSlotToJSON;
const PlayerSummary_1 = require("./PlayerSummary");
const ProjectionSummary_1 = require("./ProjectionSummary");
/**
 * @export
 */
exports.LineupSlotStatusEnum = {
    Starting: 'starting',
    Bench: 'bench',
    Locked: 'locked',
    Inactive: 'inactive'
};
/**
 * Check if a given object implements the LineupSlot interface.
 */
function instanceOfLineupSlot(value) {
    if (!('slot' in value) || value['slot'] === undefined)
        return false;
    if (!('player' in value) || value['player'] === undefined)
        return false;
    if (!('projected' in value) || value['projected'] === undefined)
        return false;
    return true;
}
function LineupSlotFromJSON(json) {
    return LineupSlotFromJSONTyped(json, false);
}
function LineupSlotFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'slot': json['slot'],
        'player': (0, PlayerSummary_1.PlayerSummaryFromJSON)(json['player']),
        'projected': (0, ProjectionSummary_1.ProjectionSummaryFromJSON)(json['projected']),
        'status': json['status'] == null ? undefined : json['status'],
        'actualPoints': json['actualPoints'] == null ? undefined : json['actualPoints'],
        'notes': json['notes'] == null ? undefined : json['notes'],
    };
}
function LineupSlotToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'slot': value['slot'],
        'player': (0, PlayerSummary_1.PlayerSummaryToJSON)(value['player']),
        'projected': (0, ProjectionSummary_1.ProjectionSummaryToJSON)(value['projected']),
        'status': value['status'],
        'actualPoints': value['actualPoints'],
        'notes': value['notes'],
    };
}
