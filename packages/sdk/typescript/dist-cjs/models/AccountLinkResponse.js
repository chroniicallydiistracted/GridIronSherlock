"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAccountLinkResponse = instanceOfAccountLinkResponse;
exports.AccountLinkResponseFromJSON = AccountLinkResponseFromJSON;
exports.AccountLinkResponseFromJSONTyped = AccountLinkResponseFromJSONTyped;
exports.AccountLinkResponseToJSON = AccountLinkResponseToJSON;
const ProviderId_1 = require("./ProviderId");
const AccountLinkResponsePkce_1 = require("./AccountLinkResponsePkce");
/**
 * Check if a given object implements the AccountLinkResponse interface.
 */
function instanceOfAccountLinkResponse(value) {
    if (!('provider' in value) || value['provider'] === undefined)
        return false;
    if (!('authorizationUrl' in value) || value['authorizationUrl'] === undefined)
        return false;
    if (!('state' in value) || value['state'] === undefined)
        return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined)
        return false;
    return true;
}
function AccountLinkResponseFromJSON(json) {
    return AccountLinkResponseFromJSONTyped(json, false);
}
function AccountLinkResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        ...json,
        'provider': (0, ProviderId_1.ProviderIdFromJSON)(json['provider']),
        'authorizationUrl': json['authorizationUrl'],
        'state': json['state'],
        'expiresAt': (new Date(json['expiresAt'])),
        'pkce': json['pkce'] == null ? undefined : (0, AccountLinkResponsePkce_1.AccountLinkResponsePkceFromJSON)(json['pkce']),
    };
}
function AccountLinkResponseToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        ...value,
        'provider': (0, ProviderId_1.ProviderIdToJSON)(value['provider']),
        'authorizationUrl': value['authorizationUrl'],
        'state': value['state'],
        'expiresAt': ((value['expiresAt']).toISOString()),
        'pkce': (0, AccountLinkResponsePkce_1.AccountLinkResponsePkceToJSON)(value['pkce']),
    };
}
