"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfLeagueDetailRosterSettings = instanceOfLeagueDetailRosterSettings;
exports.LeagueDetailRosterSettingsFromJSON = LeagueDetailRosterSettingsFromJSON;
exports.LeagueDetailRosterSettingsFromJSONTyped = LeagueDetailRosterSettingsFromJSONTyped;
exports.LeagueDetailRosterSettingsToJSON = LeagueDetailRosterSettingsToJSON;
const RosterSlotRule_1 = require("./RosterSlotRule");
/**
 * Check if a given object implements the LeagueDetailRosterSettings interface.
 */
function instanceOfLeagueDetailRosterSettings(value) {
    if (!('slots' in value) || value['slots'] === undefined)
        return false;
    if (!('benchSlots' in value) || value['benchSlots'] === undefined)
        return false;
    return true;
}
function LeagueDetailRosterSettingsFromJSON(json) {
    return LeagueDetailRosterSettingsFromJSONTyped(json, false);
}
function LeagueDetailRosterSettingsFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'slots': (json['slots'].map(RosterSlotRule_1.RosterSlotRuleFromJSON)),
        'benchSlots': json['benchSlots'],
        'irSlots': json['irSlots'] == null ? undefined : json['irSlots'],
        'notes': json['notes'] == null ? undefined : json['notes'],
    };
}
function LeagueDetailRosterSettingsToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'slots': (value['slots'].map(RosterSlotRule_1.RosterSlotRuleToJSON)),
        'benchSlots': value['benchSlots'],
        'irSlots': value['irSlots'],
        'notes': value['notes'],
    };
}
