"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPlayerListResponse = instanceOfPlayerListResponse;
exports.PlayerListResponseFromJSON = PlayerListResponseFromJSON;
exports.PlayerListResponseFromJSONTyped = PlayerListResponseFromJSONTyped;
exports.PlayerListResponseToJSON = PlayerListResponseToJSON;
const PlayerSummary_1 = require("./PlayerSummary");
/**
 * Check if a given object implements the PlayerListResponse interface.
 */
function instanceOfPlayerListResponse(value) {
    if (!('total' in value) || value['total'] === undefined)
        return false;
    if (!('page' in value) || value['page'] === undefined)
        return false;
    if (!('pageSize' in value) || value['pageSize'] === undefined)
        return false;
    if (!('items' in value) || value['items'] === undefined)
        return false;
    return true;
}
function PlayerListResponseFromJSON(json) {
    return PlayerListResponseFromJSONTyped(json, false);
}
function PlayerListResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'total': json['total'],
        'page': json['page'],
        'pageSize': json['pageSize'],
        'items': (json['items'].map(PlayerSummary_1.PlayerSummaryFromJSON)),
    };
}
function PlayerListResponseToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'total': value['total'],
        'page': value['page'],
        'pageSize': value['pageSize'],
        'items': (value['items'].map(PlayerSummary_1.PlayerSummaryToJSON)),
    };
}
