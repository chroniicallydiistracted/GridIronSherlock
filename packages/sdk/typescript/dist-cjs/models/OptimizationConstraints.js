"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OptimizationConstraintsRiskToleranceEnum = void 0;
exports.instanceOfOptimizationConstraints = instanceOfOptimizationConstraints;
exports.OptimizationConstraintsFromJSON = OptimizationConstraintsFromJSON;
exports.OptimizationConstraintsFromJSONTyped = OptimizationConstraintsFromJSONTyped;
exports.OptimizationConstraintsToJSON = OptimizationConstraintsToJSON;
const OptimizationConstraintsLockedPlayersInner_1 = require("./OptimizationConstraintsLockedPlayersInner");
/**
 * @export
 */
exports.OptimizationConstraintsRiskToleranceEnum = {
    Low: 'low',
    Medium: 'medium',
    High: 'high'
};
/**
 * Check if a given object implements the OptimizationConstraints interface.
 */
function instanceOfOptimizationConstraints(value) {
    return true;
}
function OptimizationConstraintsFromJSON(json) {
    return OptimizationConstraintsFromJSONTyped(json, false);
}
function OptimizationConstraintsFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        ...json,
        'lockedPlayers': json['lockedPlayers'] == null ? undefined : (json['lockedPlayers'].map(OptimizationConstraintsLockedPlayersInner_1.OptimizationConstraintsLockedPlayersInnerFromJSON)),
        'excludedPlayerIds': json['excludedPlayerIds'] == null ? undefined : json['excludedPlayerIds'],
        'maxPlayersPerTeam': json['maxPlayersPerTeam'] == null ? undefined : json['maxPlayersPerTeam'],
        'riskTolerance': json['riskTolerance'] == null ? undefined : json['riskTolerance'],
        'benchDepth': json['benchDepth'] == null ? undefined : json['benchDepth'],
    };
}
function OptimizationConstraintsToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        ...value,
        'lockedPlayers': value['lockedPlayers'] == null ? undefined : (value['lockedPlayers'].map(OptimizationConstraintsLockedPlayersInner_1.OptimizationConstraintsLockedPlayersInnerToJSON)),
        'excludedPlayerIds': value['excludedPlayerIds'],
        'maxPlayersPerTeam': value['maxPlayersPerTeam'],
        'riskTolerance': value['riskTolerance'],
        'benchDepth': value['benchDepth'],
    };
}
