"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPlayerSummary = instanceOfPlayerSummary;
exports.PlayerSummaryFromJSON = PlayerSummaryFromJSON;
exports.PlayerSummaryFromJSONTyped = PlayerSummaryFromJSONTyped;
exports.PlayerSummaryToJSON = PlayerSummaryToJSON;
const Provenance_1 = require("./Provenance");
const InjuryStatus_1 = require("./InjuryStatus");
/**
 * Check if a given object implements the PlayerSummary interface.
 */
function instanceOfPlayerSummary(value) {
    if (!('playerId' in value) || value['playerId'] === undefined)
        return false;
    if (!('fullName' in value) || value['fullName'] === undefined)
        return false;
    if (!('position' in value) || value['position'] === undefined)
        return false;
    if (!('team' in value) || value['team'] === undefined)
        return false;
    return true;
}
function PlayerSummaryFromJSON(json) {
    return PlayerSummaryFromJSONTyped(json, false);
}
function PlayerSummaryFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'playerId': json['playerId'],
        'gsisId': json['gsisId'] == null ? undefined : json['gsisId'],
        'fullName': json['fullName'],
        'position': json['position'],
        'team': json['team'],
        'byeWeek': json['byeWeek'] == null ? undefined : json['byeWeek'],
        'age': json['age'] == null ? undefined : json['age'],
        'injury': json['injury'] == null ? undefined : (0, InjuryStatus_1.InjuryStatusFromJSON)(json['injury']),
        'provenance': json['provenance'] == null ? undefined : (0, Provenance_1.ProvenanceFromJSON)(json['provenance']),
    };
}
function PlayerSummaryToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'playerId': value['playerId'],
        'gsisId': value['gsisId'],
        'fullName': value['fullName'],
        'position': value['position'],
        'team': value['team'],
        'byeWeek': value['byeWeek'],
        'age': value['age'],
        'injury': (0, InjuryStatus_1.InjuryStatusToJSON)(value['injury']),
        'provenance': (0, Provenance_1.ProvenanceToJSON)(value['provenance']),
    };
}
