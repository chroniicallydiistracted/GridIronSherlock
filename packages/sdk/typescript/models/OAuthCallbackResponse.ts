/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProviderId } from './ProviderId';
import {
    ProviderIdFromJSON,
    ProviderIdFromJSONTyped,
    ProviderIdToJSON,
} from './ProviderId';
import type { LinkedAccount } from './LinkedAccount';
import {
    LinkedAccountFromJSON,
    LinkedAccountFromJSONTyped,
    LinkedAccountToJSON,
} from './LinkedAccount';

/**
 * 
 * @export
 * @interface OAuthCallbackResponse
 */
export interface OAuthCallbackResponse {
    /**
     * 
     * @type {ProviderId}
     * @memberof OAuthCallbackResponse
     */
    provider: ProviderId;
    /**
     * 
     * @type {string}
     * @memberof OAuthCallbackResponse
     */
    status: OAuthCallbackResponseStatusEnum;
    /**
     * 
     * @type {LinkedAccount}
     * @memberof OAuthCallbackResponse
     */
    linkedAccount?: LinkedAccount;
    /**
     * 
     * @type {string}
     * @memberof OAuthCallbackResponse
     */
    redirect?: string;
    /**
     * 
     * @type {string}
     * @memberof OAuthCallbackResponse
     */
    message?: string;
}


/**
 * @export
 */
export const OAuthCallbackResponseStatusEnum = {
    Linked: 'linked',
    Pending: 'pending',
    Error: 'error'
} as const;
export type OAuthCallbackResponseStatusEnum = typeof OAuthCallbackResponseStatusEnum[keyof typeof OAuthCallbackResponseStatusEnum];


/**
 * Check if a given object implements the OAuthCallbackResponse interface.
 */
export function instanceOfOAuthCallbackResponse(value: object): value is OAuthCallbackResponse {
    if (!('provider' in value) || value['provider'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function OAuthCallbackResponseFromJSON(json: any): OAuthCallbackResponse {
    return OAuthCallbackResponseFromJSONTyped(json, false);
}

export function OAuthCallbackResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuthCallbackResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'provider': ProviderIdFromJSON(json['provider']),
        'status': json['status'],
        'linkedAccount': json['linkedAccount'] == null ? undefined : LinkedAccountFromJSON(json['linkedAccount']),
        'redirect': json['redirect'] == null ? undefined : json['redirect'],
        'message': json['message'] == null ? undefined : json['message'],
    };
}

export function OAuthCallbackResponseToJSON(value?: OAuthCallbackResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'provider': ProviderIdToJSON(value['provider']),
        'status': value['status'],
        'linkedAccount': LinkedAccountToJSON(value['linkedAccount']),
        'redirect': value['redirect'],
        'message': value['message'],
    };
}

