/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TradeAsset
 */
export interface TradeAsset {
    /**
     * 
     * @type {string}
     * @memberof TradeAsset
     */
    type: TradeAssetTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof TradeAsset
     */
    id: string;
    /**
     * Canonical UUID identifier.
     * @type {string}
     * @memberof TradeAsset
     */
    teamId: string;
    /**
     * 
     * @type {string}
     * @memberof TradeAsset
     */
    description?: string;
}


/**
 * @export
 */
export const TradeAssetTypeEnum = {
    Player: 'player',
    Pick: 'pick',
    Fab: 'fab'
} as const;
export type TradeAssetTypeEnum = typeof TradeAssetTypeEnum[keyof typeof TradeAssetTypeEnum];


/**
 * Check if a given object implements the TradeAsset interface.
 */
export function instanceOfTradeAsset(value: object): value is TradeAsset {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('teamId' in value) || value['teamId'] === undefined) return false;
    return true;
}

export function TradeAssetFromJSON(json: any): TradeAsset {
    return TradeAssetFromJSONTyped(json, false);
}

export function TradeAssetFromJSONTyped(json: any, ignoreDiscriminator: boolean): TradeAsset {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'id': json['id'],
        'teamId': json['teamId'],
        'description': json['description'] == null ? undefined : json['description'],
    };
}

export function TradeAssetToJSON(value?: TradeAsset | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'id': value['id'],
        'teamId': value['teamId'],
        'description': value['description'],
    };
}

