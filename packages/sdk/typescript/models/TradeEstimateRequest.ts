/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ScoringPeriod } from './ScoringPeriod';
import {
    ScoringPeriodFromJSON,
    ScoringPeriodFromJSONTyped,
    ScoringPeriodToJSON,
    ScoringPeriodToJSONTyped,
} from './ScoringPeriod';
import type { TradeAsset } from './TradeAsset';
import {
    TradeAssetFromJSON,
    TradeAssetFromJSONTyped,
    TradeAssetToJSON,
    TradeAssetToJSONTyped,
} from './TradeAsset';

/**
 * 
 * @export
 * @interface TradeEstimateRequest
 */
export interface TradeEstimateRequest {
    /**
     * Canonical UUID identifier.
     * @type {string}
     * @memberof TradeEstimateRequest
     */
    leagueId: string;
    /**
     * 
     * @type {ScoringPeriod}
     * @memberof TradeEstimateRequest
     */
    period?: ScoringPeriod;
    /**
     * Canonical UUID identifier.
     * @type {string}
     * @memberof TradeEstimateRequest
     */
    fromTeamId: string;
    /**
     * Canonical UUID identifier.
     * @type {string}
     * @memberof TradeEstimateRequest
     */
    toTeamId: string;
    /**
     * 
     * @type {Array<TradeAsset>}
     * @memberof TradeEstimateRequest
     */
    offer: Array<TradeAsset>;
    /**
     * 
     * @type {Array<TradeAsset>}
     * @memberof TradeEstimateRequest
     */
    request: Array<TradeAsset>;
    /**
     * 
     * @type {boolean}
     * @memberof TradeEstimateRequest
     */
    allowCounter?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TradeEstimateRequest
     */
    includeWaiverAlternatives?: boolean;
}

/**
 * Check if a given object implements the TradeEstimateRequest interface.
 */
export function instanceOfTradeEstimateRequest(value: object): value is TradeEstimateRequest {
    if (!('leagueId' in value) || value['leagueId'] === undefined) return false;
    if (!('fromTeamId' in value) || value['fromTeamId'] === undefined) return false;
    if (!('toTeamId' in value) || value['toTeamId'] === undefined) return false;
    if (!('offer' in value) || value['offer'] === undefined) return false;
    if (!('request' in value) || value['request'] === undefined) return false;
    return true;
}

export function TradeEstimateRequestFromJSON(json: any): TradeEstimateRequest {
    return TradeEstimateRequestFromJSONTyped(json, false);
}

export function TradeEstimateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TradeEstimateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'leagueId': json['leagueId'],
        'period': json['period'] == null ? undefined : ScoringPeriodFromJSON(json['period']),
        'fromTeamId': json['fromTeamId'],
        'toTeamId': json['toTeamId'],
        'offer': ((json['offer'] as Array<any>).map(TradeAssetFromJSON)),
        'request': ((json['request'] as Array<any>).map(TradeAssetFromJSON)),
        'allowCounter': json['allowCounter'] == null ? undefined : json['allowCounter'],
        'includeWaiverAlternatives': json['includeWaiverAlternatives'] == null ? undefined : json['includeWaiverAlternatives'],
    };
}

export function TradeEstimateRequestToJSON(json: any): TradeEstimateRequest {
    return TradeEstimateRequestToJSONTyped(json, false);
}

export function TradeEstimateRequestToJSONTyped(value?: TradeEstimateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'leagueId': value['leagueId'],
        'period': ScoringPeriodToJSON(value['period']),
        'fromTeamId': value['fromTeamId'],
        'toTeamId': value['toTeamId'],
        'offer': ((value['offer'] as Array<any>).map(TradeAssetToJSON)),
        'request': ((value['request'] as Array<any>).map(TradeAssetToJSON)),
        'allowCounter': value['allowCounter'],
        'includeWaiverAlternatives': value['includeWaiverAlternatives'],
    };
}

