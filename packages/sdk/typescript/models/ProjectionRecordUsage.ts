/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProjectionRecordUsage
 */
export interface ProjectionRecordUsage {
    /**
     * 
     * @type {number}
     * @memberof ProjectionRecordUsage
     */
    snapShare?: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectionRecordUsage
     */
    routeShare?: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectionRecordUsage
     */
    targetShare?: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectionRecordUsage
     */
    rushShare?: number;
}

/**
 * Check if a given object implements the ProjectionRecordUsage interface.
 */
export function instanceOfProjectionRecordUsage(value: object): value is ProjectionRecordUsage {
    return true;
}

export function ProjectionRecordUsageFromJSON(json: any): ProjectionRecordUsage {
    return ProjectionRecordUsageFromJSONTyped(json, false);
}

export function ProjectionRecordUsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectionRecordUsage {
    if (json == null) {
        return json;
    }
    return {
        
        'snapShare': json['snapShare'] == null ? undefined : json['snapShare'],
        'routeShare': json['routeShare'] == null ? undefined : json['routeShare'],
        'targetShare': json['targetShare'] == null ? undefined : json['targetShare'],
        'rushShare': json['rushShare'] == null ? undefined : json['rushShare'],
    };
}

export function ProjectionRecordUsageToJSON(value?: ProjectionRecordUsage | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'snapShare': value['snapShare'],
        'routeShare': value['routeShare'],
        'targetShare': value['targetShare'],
        'rushShare': value['rushShare'],
    };
}

