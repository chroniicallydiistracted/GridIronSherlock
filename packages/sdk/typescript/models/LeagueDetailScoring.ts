/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LeagueDetailScoring
 */
export interface LeagueDetailScoring {
    /**
     * 
     * @type {string}
     * @memberof LeagueDetailScoring
     */
    type: string;
    /**
     * 
     * @type {number}
     * @memberof LeagueDetailScoring
     */
    ppr: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof LeagueDetailScoring
     */
    bonusRules?: Array<string>;
}

/**
 * Check if a given object implements the LeagueDetailScoring interface.
 */
export function instanceOfLeagueDetailScoring(value: object): value is LeagueDetailScoring {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('ppr' in value) || value['ppr'] === undefined) return false;
    return true;
}

export function LeagueDetailScoringFromJSON(json: any): LeagueDetailScoring {
    return LeagueDetailScoringFromJSONTyped(json, false);
}

export function LeagueDetailScoringFromJSONTyped(json: any, ignoreDiscriminator: boolean): LeagueDetailScoring {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'ppr': json['ppr'],
        'bonusRules': json['bonusRules'] == null ? undefined : json['bonusRules'],
    };
}

export function LeagueDetailScoringToJSON(value?: LeagueDetailScoring | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'ppr': value['ppr'],
        'bonusRules': value['bonusRules'],
    };
}

