/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LeagueSummary } from './LeagueSummary';
import {
    LeagueSummaryFromJSON,
    LeagueSummaryFromJSONTyped,
    LeagueSummaryToJSON,
    LeagueSummaryToJSONTyped,
} from './LeagueSummary';

/**
 * 
 * @export
 * @interface LeagueListResponse
 */
export interface LeagueListResponse {
    /**
     * 
     * @type {number}
     * @memberof LeagueListResponse
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof LeagueListResponse
     */
    page: number;
    /**
     * 
     * @type {number}
     * @memberof LeagueListResponse
     */
    pageSize: number;
    /**
     * 
     * @type {Array<LeagueSummary>}
     * @memberof LeagueListResponse
     */
    items: Array<LeagueSummary>;
}

/**
 * Check if a given object implements the LeagueListResponse interface.
 */
export function instanceOfLeagueListResponse(value: object): value is LeagueListResponse {
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('page' in value) || value['page'] === undefined) return false;
    if (!('pageSize' in value) || value['pageSize'] === undefined) return false;
    if (!('items' in value) || value['items'] === undefined) return false;
    return true;
}

export function LeagueListResponseFromJSON(json: any): LeagueListResponse {
    return LeagueListResponseFromJSONTyped(json, false);
}

export function LeagueListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LeagueListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'total': json['total'],
        'page': json['page'],
        'pageSize': json['pageSize'],
        'items': ((json['items'] as Array<any>).map(LeagueSummaryFromJSON)),
    };
}

export function LeagueListResponseToJSON(json: any): LeagueListResponse {
    return LeagueListResponseToJSONTyped(json, false);
}

export function LeagueListResponseToJSONTyped(value?: LeagueListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'total': value['total'],
        'page': value['page'],
        'pageSize': value['pageSize'],
        'items': ((value['items'] as Array<any>).map(LeagueSummaryToJSON)),
    };
}

