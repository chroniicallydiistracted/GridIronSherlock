/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Provenance } from './Provenance';
import {
    ProvenanceFromJSON,
    ProvenanceFromJSONTyped,
    ProvenanceToJSON,
    ProvenanceToJSONTyped,
} from './Provenance';

/**
 * 
 * @export
 * @interface ProjectionSummary
 */
export interface ProjectionSummary {
    /**
     * 
     * @type {number}
     * @memberof ProjectionSummary
     */
    meanPoints: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectionSummary
     */
    p20: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectionSummary
     */
    p50: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectionSummary
     */
    p80: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectionSummary
     */
    boomProbability: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectionSummary
     */
    bustProbability: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectionSummary
     */
    floorPoints?: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectionSummary
     */
    ceilingPoints?: number;
    /**
     * 
     * @type {Provenance}
     * @memberof ProjectionSummary
     */
    provenance?: Provenance;
}

/**
 * Check if a given object implements the ProjectionSummary interface.
 */
export function instanceOfProjectionSummary(value: object): value is ProjectionSummary {
    if (!('meanPoints' in value) || value['meanPoints'] === undefined) return false;
    if (!('p20' in value) || value['p20'] === undefined) return false;
    if (!('p50' in value) || value['p50'] === undefined) return false;
    if (!('p80' in value) || value['p80'] === undefined) return false;
    if (!('boomProbability' in value) || value['boomProbability'] === undefined) return false;
    if (!('bustProbability' in value) || value['bustProbability'] === undefined) return false;
    return true;
}

export function ProjectionSummaryFromJSON(json: any): ProjectionSummary {
    return ProjectionSummaryFromJSONTyped(json, false);
}

export function ProjectionSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectionSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'meanPoints': json['meanPoints'],
        'p20': json['p20'],
        'p50': json['p50'],
        'p80': json['p80'],
        'boomProbability': json['boomProbability'],
        'bustProbability': json['bustProbability'],
        'floorPoints': json['floorPoints'] == null ? undefined : json['floorPoints'],
        'ceilingPoints': json['ceilingPoints'] == null ? undefined : json['ceilingPoints'],
        'provenance': json['provenance'] == null ? undefined : ProvenanceFromJSON(json['provenance']),
    };
}

export function ProjectionSummaryToJSON(json: any): ProjectionSummary {
    return ProjectionSummaryToJSONTyped(json, false);
}

export function ProjectionSummaryToJSONTyped(value?: ProjectionSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'meanPoints': value['meanPoints'],
        'p20': value['p20'],
        'p50': value['p50'],
        'p80': value['p80'],
        'boomProbability': value['boomProbability'],
        'bustProbability': value['bustProbability'],
        'floorPoints': value['floorPoints'],
        'ceilingPoints': value['ceilingPoints'],
        'provenance': ProvenanceToJSON(value['provenance']),
    };
}

