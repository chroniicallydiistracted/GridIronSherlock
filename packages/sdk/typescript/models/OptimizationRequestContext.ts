/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OptimizationRequestContext
 */
export interface OptimizationRequestContext {
    /**
     * 
     * @type {boolean}
     * @memberof OptimizationRequestContext
     */
    includeWaivers?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OptimizationRequestContext
     */
    includeTrades?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OptimizationRequestContext
     */
    notes?: string;
}

/**
 * Check if a given object implements the OptimizationRequestContext interface.
 */
export function instanceOfOptimizationRequestContext(value: object): value is OptimizationRequestContext {
    return true;
}

export function OptimizationRequestContextFromJSON(json: any): OptimizationRequestContext {
    return OptimizationRequestContextFromJSONTyped(json, false);
}

export function OptimizationRequestContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): OptimizationRequestContext {
    if (json == null) {
        return json;
    }
    return {
        
        'includeWaivers': json['includeWaivers'] == null ? undefined : json['includeWaivers'],
        'includeTrades': json['includeTrades'] == null ? undefined : json['includeTrades'],
        'notes': json['notes'] == null ? undefined : json['notes'],
    };
}

export function OptimizationRequestContextToJSON(json: any): OptimizationRequestContext {
    return OptimizationRequestContextToJSONTyped(json, false);
}

export function OptimizationRequestContextToJSONTyped(value?: OptimizationRequestContext | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'includeWaivers': value['includeWaivers'],
        'includeTrades': value['includeTrades'],
        'notes': value['notes'],
    };
}

