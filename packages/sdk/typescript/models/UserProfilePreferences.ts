/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserProfilePreferences
 */
export interface UserProfilePreferences {
    /**
     * Canonical UUID identifier.
     * @type {string}
     * @memberof UserProfilePreferences
     */
    defaultLeagueId?: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfilePreferences
     */
    defaultView?: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfilePreferences
     */
    notificationOptIn?: boolean;
}

/**
 * Check if a given object implements the UserProfilePreferences interface.
 */
export function instanceOfUserProfilePreferences(value: object): value is UserProfilePreferences {
    return true;
}

export function UserProfilePreferencesFromJSON(json: any): UserProfilePreferences {
    return UserProfilePreferencesFromJSONTyped(json, false);
}

export function UserProfilePreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfilePreferences {
    if (json == null) {
        return json;
    }
    return {
        
        'defaultLeagueId': json['defaultLeagueId'] == null ? undefined : json['defaultLeagueId'],
        'defaultView': json['defaultView'] == null ? undefined : json['defaultView'],
        'notificationOptIn': json['notificationOptIn'] == null ? undefined : json['notificationOptIn'],
    };
}

export function UserProfilePreferencesToJSON(value?: UserProfilePreferences | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'defaultLeagueId': value['defaultLeagueId'],
        'defaultView': value['defaultView'],
        'notificationOptIn': value['notificationOptIn'],
    };
}

