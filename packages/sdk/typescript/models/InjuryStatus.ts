/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface InjuryStatus
 */
export interface InjuryStatus {
    /**
     * 
     * @type {string}
     * @memberof InjuryStatus
     */
    status: InjuryStatusStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof InjuryStatus
     */
    designation?: string;
    /**
     * 
     * @type {Date}
     * @memberof InjuryStatus
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof InjuryStatus
     */
    notes?: string;
}


/**
 * @export
 */
export const InjuryStatusStatusEnum = {
    Active: 'active',
    Questionable: 'questionable',
    Doubtful: 'doubtful',
    Out: 'out',
    Ir: 'ir',
    Suspended: 'suspended'
} as const;
export type InjuryStatusStatusEnum = typeof InjuryStatusStatusEnum[keyof typeof InjuryStatusStatusEnum];


/**
 * Check if a given object implements the InjuryStatus interface.
 */
export function instanceOfInjuryStatus(value: object): value is InjuryStatus {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function InjuryStatusFromJSON(json: any): InjuryStatus {
    return InjuryStatusFromJSONTyped(json, false);
}

export function InjuryStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): InjuryStatus {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'designation': json['designation'] == null ? undefined : json['designation'],
        'updatedAt': (new Date(json['updatedAt'])),
        'notes': json['notes'] == null ? undefined : json['notes'],
    };
}

export function InjuryStatusToJSON(value?: InjuryStatus | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'status': value['status'],
        'designation': value['designation'],
        'updatedAt': ((value['updatedAt']).toISOString()),
        'notes': value['notes'],
    };
}

