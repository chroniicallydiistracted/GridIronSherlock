/* tslint:disable */
/* eslint-disable */
/**
 * GridIron Sherlock API
 * Contracts for the GridIron Sherlock fantasy intelligence platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OptimizationObjective
 */
export interface OptimizationObjective {
    /**
     * 
     * @type {string}
     * @memberof OptimizationObjective
     */
    focus: OptimizationObjectiveFocusEnum;
    /**
     * 
     * @type {number}
     * @memberof OptimizationObjective
     */
    ceilingWeight?: number;
    /**
     * 
     * @type {number}
     * @memberof OptimizationObjective
     */
    variancePenalty?: number;
    /**
     * 
     * @type {string}
     * @memberof OptimizationObjective
     */
    notes?: string;
}


/**
 * @export
 */
export const OptimizationObjectiveFocusEnum = {
    Balanced: 'balanced',
    Ceiling: 'ceiling',
    Floor: 'floor'
} as const;
export type OptimizationObjectiveFocusEnum = typeof OptimizationObjectiveFocusEnum[keyof typeof OptimizationObjectiveFocusEnum];


/**
 * Check if a given object implements the OptimizationObjective interface.
 */
export function instanceOfOptimizationObjective(value: object): value is OptimizationObjective {
    if (!('focus' in value) || value['focus'] === undefined) return false;
    return true;
}

export function OptimizationObjectiveFromJSON(json: any): OptimizationObjective {
    return OptimizationObjectiveFromJSONTyped(json, false);
}

export function OptimizationObjectiveFromJSONTyped(json: any, ignoreDiscriminator: boolean): OptimizationObjective {
    if (json == null) {
        return json;
    }
    return {
        
        'focus': json['focus'],
        'ceilingWeight': json['ceilingWeight'] == null ? undefined : json['ceilingWeight'],
        'variancePenalty': json['variancePenalty'] == null ? undefined : json['variancePenalty'],
        'notes': json['notes'] == null ? undefined : json['notes'],
    };
}

export function OptimizationObjectiveToJSON(json: any): OptimizationObjective {
    return OptimizationObjectiveToJSONTyped(json, false);
}

export function OptimizationObjectiveToJSONTyped(value?: OptimizationObjective | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'focus': value['focus'],
        'ceilingWeight': value['ceilingWeight'],
        'variancePenalty': value['variancePenalty'],
        'notes': value['notes'],
    };
}

